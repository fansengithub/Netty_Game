<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmall.dao.IncomeDetailMapper">
  <resultMap id="BaseResultMap" type="com.mmall.model.IncomeDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="consump_type" jdbcType="VARCHAR" property="consumpType" />
    <result column="income_money" jdbcType="DECIMAL" property="incomeMoney" />
    <result column="account_balance" jdbcType="DECIMAL" property="accountBalance" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.mmall.entity.IncomeDetailCount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="consump_type" jdbcType="VARCHAR" property="consumpType" />
    <result column="income_money" jdbcType="DECIMAL" property="incomeMoney" />
    <result column="account_balance" jdbcType="DECIMAL" property="accountBalance" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="incomeCount" jdbcType="DECIMAL" property="incomeCount" />
    <result column="minTime" jdbcType="TIMESTAMP" property="minTime" />
</resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, user_name, role, consump_type, income_money, account_balance, create_time
  </sql>
  <select id="selectByExample" parameterType="com.mmall.model.IncomeDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from income_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from income_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from income_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmall.model.IncomeDetailExample">
    delete from income_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmall.model.IncomeDetail">
    insert into income_detail (id, user_id, user_name, 
      role, consump_type, income_money, 
      account_balance, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{consumpType,jdbcType=VARCHAR}, #{incomeMoney,jdbcType=DECIMAL}, 
      #{accountBalance,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.model.IncomeDetail">
    insert into income_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="consumpType != null">
        consump_type,
      </if>
      <if test="incomeMoney != null">
        income_money,
      </if>
      <if test="accountBalance != null">
        account_balance,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="consumpType != null">
        #{consumpType,jdbcType=VARCHAR},
      </if>
      <if test="incomeMoney != null">
        #{incomeMoney,jdbcType=DECIMAL},
      </if>
      <if test="accountBalance != null">
        #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmall.model.IncomeDetailExample" resultType="java.lang.Long">
    select count(*) from income_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update income_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.consumpType != null">
        consump_type = #{record.consumpType,jdbcType=VARCHAR},
      </if>
      <if test="record.incomeMoney != null">
        income_money = #{record.incomeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.accountBalance != null">
        account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update income_detail
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      consump_type = #{record.consumpType,jdbcType=VARCHAR},
      income_money = #{record.incomeMoney,jdbcType=DECIMAL},
      account_balance = #{record.accountBalance,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.model.IncomeDetail">
    update income_detail
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="consumpType != null">
        consump_type = #{consumpType,jdbcType=VARCHAR},
      </if>
      <if test="incomeMoney != null">
        income_money = #{incomeMoney,jdbcType=DECIMAL},
      </if>
      <if test="accountBalance != null">
        account_balance = #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.model.IncomeDetail">
    update income_detail
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      consump_type = #{consumpType,jdbcType=VARCHAR},
      income_money = #{incomeMoney,jdbcType=DECIMAL},
      account_balance = #{accountBalance,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllIncomeDetail" resultMap="BaseResultMap">
    SELECT * FROM income_detail
    <where>
      <if test="param!=null and param!=''">
        AND user_id  LIKE concat("%",#{param},"%") or user_name LIKE concat("%",#{param},"%")
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="selectAllByService" resultMap="BaseResultMap">
    SELECT * FROM income_detail
    <where>
      ((role='1' and user_id = #{uid,jdbcType=INTEGER}) or
      (role='2' and user_id in (select id from organization where  serviceProvider_id = #{uid,jdbcType=INTEGER})) or
      (role='3' and user_id in (select id from piano_shop where belongto_orginazeID in(select id from organization where serviceProvider_id=#{uid,jdbcType=INTEGER}))) or
      (role='4' and user_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where belongto_orginazeID in (select id from organization where serviceProvider_id = #{uid,jdbcType=INTEGER})))))

      <if test="param!=null and param!=''">
        AND user_id  LIKE concat("%",#{param},"%") or user_name LIKE concat("%",#{param},"%")
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="selectAllByOrganization" resultMap="BaseResultMap">
    SELECT * FROM income_detail
    <where>
      ((role='2' and user_id = #{uid,jdbcType=INTEGER}) or
      (role='3' and user_id in (select id from piano_shop where belongto_orginazeID =#{uid,jdbcType=INTEGER})) or
      (role='4' and user_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where belongto_orginazeID= #{uid,jdbcType=INTEGER}))))
      <if test="param!=null and param!=''">
        AND user_id  LIKE concat("%",#{param},"%") or user_name LIKE concat("%",#{param},"%")
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="selectAllByPianoShop" resultMap="BaseResultMap">
    SELECT * FROM income_detail
    <where>
      ((role='3' and user_id = #{uid,jdbcType=INTEGER}) or
      (role='4' and user_id in (select id from teacher where  belongto_piano_shopID = #{uid,jdbcType=INTEGER})))
      <if test="param!=null and param!=''">
        AND user_id  LIKE concat("%",#{param},"%") or user_name LIKE concat("%",#{param},"%")
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    order by create_time desc
  </select>
  <select id="getGroupIncomeDetail" resultMap="BaseResultMap2">
    SELECT *,SUM(income_money) as incomeCount,MAX(create_time) as minTime FROM income_detail
    <where>
      <if test="param!=null and param!=''">
        AND user_id=#{param}
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    GROUP BY role,consump_type
  </select>
  <select id="getGroupIncomeDetailByService" resultMap="BaseResultMap2">
    SELECT *,SUM(income_money) as incomeCount,MAX(create_time) as minTime FROM income_detail
    <where>
      ((role='1' and user_id = #{uid,jdbcType=INTEGER}) or
      (role='2' and user_id in (select id from organization where  serviceProvider_id = #{uid,jdbcType=INTEGER})) or
      (role='3' and user_id in (select id from piano_shop where belongto_orginazeID in(select id from organization where serviceProvider_id=#{uid,jdbcType=INTEGER}))) or
      (role='4' and user_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where belongto_orginazeID in (select id from organization where serviceProvider_id = #{uid,jdbcType=INTEGER})))))
      <if test="param!=null and param!=''">
        AND user_id=#{param}
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    GROUP BY role,consump_type
  </select>
  <select id="getGroupIncomeDetailByOrganization" resultMap="BaseResultMap2">
    SELECT *,SUM(income_money) as incomeCount,MAX(create_time) as minTime FROM income_detail
    <where>
      ((role='2' and user_id = #{uid,jdbcType=INTEGER}) or
      (role='3' and user_id in (select id from piano_shop where belongto_orginazeID =#{uid,jdbcType=INTEGER})) or
      (role='4' and user_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where belongto_orginazeID= #{uid,jdbcType=INTEGER}))))
      <if test="param!=null and param!=''">
        AND user_id=#{param}
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    GROUP BY role,consump_type
  </select>
  <select id="getGroupIncomeDetailByPianoShop" resultMap="BaseResultMap2">
    SELECT *,SUM(income_money) as incomeCount,MAX(create_time) as minTime FROM income_detail
    <where>
      ((role='3' and user_id = #{uid,jdbcType=INTEGER}) or
      (role='4' and user_id in (select id from teacher where  belongto_piano_shopID = #{uid,jdbcType=INTEGER})))
      <if test="param!=null and param!=''">
        AND user_id=#{param}
      </if>
      <if test="consumpType1!=null and consumpType1!=''">
        AND consump_type=#{consumpType1}
      </if>
      <if test="startTime != null and startTime != ''">
        and create_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and create_time &lt; #{endTime}
      </if>
    </where>
    GROUP BY role,consump_type
  </select>
  <!--查询自己的总收入-->
  <select id="getIncomeDetailById" resultType="java.lang.Integer">
    SELECT SUM(income_money) FROM income_detail where role=#{role} AND user_id=#{userId}
  </select>
  <!--<select id="getMinTimeIncomeDetail" resultMap="BaseResultMap2">-->
    <!--SELECT *,max(create_time) as minTime FROM income_detail-->
    <!--<where>-->
      <!--<if test="param!=null and param!=''">-->
        <!--AND user_id=#{param}-->
      <!--</if>-->
      <!--<if test="consumpType1!=null and consumpType1!=''">-->
        <!--AND consump_type=#{consumpType1}-->
      <!--</if>-->
      <!--<if test="startTime != null and startTime != ''">-->
        <!--and create_time &gt; #{startTime}-->
      <!--</if>-->
      <!--<if test="endTime != null and endTime != ''">-->
        <!--and create_time &lt; #{endTime}-->
      <!--</if>-->
    <!--</where>-->
    <!--GROUP BY role,consump_type-->
  <!--</select>-->
</mapper>
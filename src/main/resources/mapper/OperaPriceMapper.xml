<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmall.dao.OperaPriceMapper">
  <resultMap id="BaseResultMap" type="com.mmall.model.OperaPrice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="opera_id" jdbcType="INTEGER" property="operaId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="deadline" jdbcType="INTEGER" property="deadline" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="is_special" jdbcType="INTEGER" property="isSpecial" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, opera_id, price, deadline, createtime, is_special
  </sql>
  <select id="selectByExample" parameterType="com.mmall.model.OperaPriceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from opera_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from opera_price
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from opera_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmall.model.OperaPriceExample">
    delete from opera_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmall.model.OperaPrice">
    insert into opera_price (id, opera_id, price, 
      deadline, createtime, is_special
      )
    values (#{id,jdbcType=INTEGER}, #{operaId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{deadline,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{isSpecial,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.model.OperaPrice">
    insert into opera_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="operaId != null">
        opera_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="isSpecial != null">
        is_special,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="operaId != null">
        #{operaId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSpecial != null">
        #{isSpecial,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmall.model.OperaPriceExample" resultType="java.lang.Long">
    select count(*) from opera_price
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update opera_price
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.operaId != null">
        opera_id = #{record.operaId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSpecial != null">
        is_special = #{record.isSpecial,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update opera_price
    set id = #{record.id,jdbcType=INTEGER},
      opera_id = #{record.operaId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      deadline = #{record.deadline,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      is_special = #{record.isSpecial,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.model.OperaPrice">
    update opera_price
    <set>
      <if test="operaId != null">
        opera_id = #{operaId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSpecial != null">
        is_special = #{isSpecial,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.model.OperaPrice">
    update opera_price
    set opera_id = #{operaId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      deadline = #{deadline,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      is_special = #{isSpecial,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByOperaId" parameterType="java.lang.Integer">
    delete from opera_price
    where opera_id = #{operaId,jdbcType=INTEGER}
  </delete>

  <select id="selectByOperaId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from opera_price
    where opera_id = #{operaId,jdbcType=INTEGER}
  </select>


  <select id="selectSpecialByOperaId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from opera_price
    where opera_id = #{operaId,jdbcType=INTEGER} and is_special = 1
  </select>


  <select id="selectByOperaIdAndIsSpecial" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from opera_price
    where 1 = 1
    <if test="operaId!=null">and
      opera_id = #{operaId}
    </if>
    <if test="isSpecial">and
      is_special = #{isSpecial}
    </if>
  </select>


  <select id="selectIsFree" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from opera_price
    where  price = 0
    <if test="operaId!=null">and
      opera_id = #{operaId}
    </if>
  </select>
</mapper>
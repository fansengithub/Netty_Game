<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmall.dao.CommentTeacToStuMapper">
    <resultMap id="BaseResultMap" type="com.mmall.model.CommentTeacToStu">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="piano_shop" jdbcType="VARCHAR" property="pianoShop"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="teacher" jdbcType="VARCHAR" property="teacher"/>
        <result column="student_id" jdbcType="INTEGER" property="studentId"/>
        <result column="student" jdbcType="VARCHAR" property="student"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="parent" jdbcType="VARCHAR" property="parent"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="start_level" jdbcType="INTEGER" property="startLevel"/>
        <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime"/>
        <result column="comment_detail" jdbcType="VARCHAR" property="commentDetail"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, piano_shop, teacher_id, teacher, student_id, student, parent_id, parent, comment, 
    start_level, comment_time, comment_detail
  </sql>
    <select id="selectByExample" parameterType="com.mmall.model.CommentTeacToStuExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment_teac_to_stu
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.mmall.model.CommentTeacToStuExample">
        delete from comment_teac_to_stu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mmall.model.CommentTeacToStu">
    insert into comment_teac_to_stu (id, piano_shop, teacher_id, 
      teacher, student_id, student, 
      parent_id, parent, comment, 
      start_level, comment_time, comment_detail
      )
    values (#{id,jdbcType=INTEGER}, #{pianoShop,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{teacher,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, #{student,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=INTEGER}, #{parent,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{startLevel,jdbcType=INTEGER}, #{commentTime,jdbcType=TIMESTAMP}, #{commentDetail,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.mmall.model.CommentTeacToStu">
        insert into comment_teac_to_stu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pianoShop != null">
                piano_shop,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="teacher != null">
                teacher,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="student != null">
                student,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="parent != null">
                parent,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="startLevel != null">
                start_level,
            </if>
            <if test="commentTime != null">
                comment_time,
            </if>
            <if test="commentDetail != null">
                comment_detail,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pianoShop != null">
                #{pianoShop,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="student != null">
                #{student,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=VARCHAR},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="startLevel != null">
                #{startLevel,jdbcType=INTEGER},
            </if>
            <if test="commentTime != null">
                #{commentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentDetail != null">
                #{commentDetail,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mmall.model.CommentTeacToStuExample" resultType="java.lang.Long">
        select count(*) from comment_teac_to_stu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update comment_teac_to_stu
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.pianoShop != null">
                piano_shop = #{record.pianoShop,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherId != null">
                teacher_id = #{record.teacherId,jdbcType=INTEGER},
            </if>
            <if test="record.teacher != null">
                teacher = #{record.teacher,jdbcType=VARCHAR},
            </if>
            <if test="record.studentId != null">
                student_id = #{record.studentId,jdbcType=INTEGER},
            </if>
            <if test="record.student != null">
                student = #{record.student,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.parent != null">
                parent = #{record.parent,jdbcType=VARCHAR},
            </if>
            <if test="record.comment != null">
                comment = #{record.comment,jdbcType=VARCHAR},
            </if>
            <if test="record.startLevel != null">
                start_level = #{record.startLevel,jdbcType=INTEGER},
            </if>
            <if test="record.commentTime != null">
                comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.commentDetail != null">
                comment_detail = #{record.commentDetail,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update comment_teac_to_stu
        set id = #{record.id,jdbcType=INTEGER},
        piano_shop = #{record.pianoShop,jdbcType=VARCHAR},
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
        teacher = #{record.teacher,jdbcType=VARCHAR},
        student_id = #{record.studentId,jdbcType=INTEGER},
        student = #{record.student,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=INTEGER},
        parent = #{record.parent,jdbcType=VARCHAR},
        comment = #{record.comment,jdbcType=VARCHAR},
        start_level = #{record.startLevel,jdbcType=INTEGER},
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
        comment_detail = #{record.commentDetail,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mmall.model.CommentTeacToStu">
        update comment_teac_to_stu
        <set>
            <if test="pianoShop != null">
                piano_shop = #{pianoShop,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="teacher != null">
                teacher = #{teacher,jdbcType=VARCHAR},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="student != null">
                student = #{student,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="parent != null">
                parent = #{parent,jdbcType=VARCHAR},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="startLevel != null">
                start_level = #{startLevel,jdbcType=INTEGER},
            </if>
            <if test="commentTime != null">
                comment_time = #{commentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentDetail != null">
                comment_detail = #{commentDetail,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mmall.model.CommentTeacToStu">
    update comment_teac_to_stu
    set piano_shop = #{pianoShop,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      student = #{student,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      parent = #{parent,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      start_level = #{startLevel,jdbcType=INTEGER},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      comment_detail = #{commentDetail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        <where>

            <if test="param!=null">
                and (teacher like CONCAT('%',#{param},'%') or student like CONCAT('%',#{param},'%'))
            </if>
        </where>
        order by comment_time desc
    </select>
    <select id="selectAllByService" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        <where>
            (teacher_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where
            belongto_orginazeID in (select id from organization where serviceProvider_id = #{uid,jdbcType=INTEGER}))))
            <if test="param!=null">
                and (teacher like CONCAT('%',#{param},'%') or student like CONCAT('%',#{param},'%'))
            </if>
        </where>
        order by comment_time desc
    </select>
    <select id="selectAllByOrganization" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        <where>
            (teacher_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where
            belongto_orginazeID= #{uid,jdbcType=INTEGER})))
            <if test="param!=null">
                and (teacher like CONCAT('%',#{param},'%') or student like CONCAT('%',#{param},'%'))
            </if>
        </where>
        order by comment_time desc
    </select>
    <select id="selectAllByPianoShop" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        <where>
            (teacher_id in (select id from teacher where belongto_piano_shopID= #{uid,jdbcType=INTEGER}))
            <if test="param!=null">
                and (teacher like CONCAT('%',#{param},'%') or student like CONCAT('%',#{param},'%'))
            </if>
        </where>
        order by comment_time desc
    </select>


    <select id="selectByTeacherIdAndStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        WHERE 1=1

            and teacher_id = #{teacherId}

            and student_id = #{studentId}

    </select>

    <select id="selectByTeacherId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment_teac_to_stu
        WHERE 1=1
        <if test="teacherId!=null">
            and teacher_id = #{teacherId}
        </if>

    </select>


</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmall.dao.StudentsMapper">
  <resultMap id="BaseResultMap" type="com.mmall.model.Students">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stundent_name" jdbcType="VARCHAR" property="stundentName" />
    <result column="stundent_id" jdbcType="BIGINT" property="stundentId" />
    <result column="referee_id" jdbcType="INTEGER" property="refereeId" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="parent_name" jdbcType="VARCHAR" property="parentName" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
    <result column="member_level" jdbcType="INTEGER" property="memberLevel" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="remind" jdbcType="INTEGER" property="remind" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="game_score" jdbcType="INTEGER" property="gameScore" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="head_url" jdbcType="VARCHAR" property="headUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stundent_name, stundent_id, referee_id, gender, age, parent_id, parent_name, 
    teacher_id, teacher_name, member_level, telephone, area, address, remind, state, 
    score, game_score, balance, register_time, last_login_time, head_url
  </sql>
  <select id="selectByExample" parameterType="com.mmall.model.StudentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmall.model.StudentsExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmall.model.Students">
    insert into students (id, stundent_name, stundent_id, 
      referee_id, gender, age, 
      parent_id, parent_name, teacher_id, 
      teacher_name, member_level, telephone, 
      area, address, remind, 
      state, score, game_score, 
      balance, register_time, last_login_time, 
      head_url)
    values (#{id,jdbcType=INTEGER}, #{stundentName,jdbcType=VARCHAR}, #{stundentId,jdbcType=BIGINT}, 
      #{refereeId,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{parentName,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{teacherName,jdbcType=VARCHAR}, #{memberLevel,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{remind,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{gameScore,jdbcType=INTEGER}, 
      #{balance,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{headUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.model.Students" useGeneratedKeys="true" keyProperty="id">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stundentName != null">
        stundent_name,
      </if>
      <if test="stundentId != null">
        stundent_id,
      </if>
      <if test="refereeId != null">
        referee_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="parentName != null">
        parent_name,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacherName != null">
        teacher_name,
      </if>
      <if test="memberLevel != null">
        member_level,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="remind != null">
        remind,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="gameScore != null">
        game_score,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="headUrl != null">
        head_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stundentName != null">
        #{stundentName,jdbcType=VARCHAR},
      </if>
      <if test="stundentId != null">
        #{stundentId,jdbcType=BIGINT},
      </if>
      <if test="refereeId != null">
        #{refereeId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentName != null">
        #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null">
        #{memberLevel,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="remind != null">
        #{remind,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="gameScore != null">
        #{gameScore,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headUrl != null">
        #{headUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmall.model.StudentsExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stundentName != null">
        stundent_name = #{record.stundentName,jdbcType=VARCHAR},
      </if>
      <if test="record.stundentId != null">
        stundent_id = #{record.stundentId,jdbcType=BIGINT},
      </if>
      <if test="record.refereeId != null">
        referee_id = #{record.refereeId,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.parentName != null">
        parent_name = #{record.parentName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherName != null">
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevel != null">
        member_level = #{record.memberLevel,jdbcType=INTEGER},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.remind != null">
        remind = #{record.remind,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.gameScore != null">
        game_score = #{record.gameScore,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.headUrl != null">
        head_url = #{record.headUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set id = #{record.id,jdbcType=INTEGER},
      stundent_name = #{record.stundentName,jdbcType=VARCHAR},
      stundent_id = #{record.stundentId,jdbcType=BIGINT},
      referee_id = #{record.refereeId,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      parent_name = #{record.parentName,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      member_level = #{record.memberLevel,jdbcType=INTEGER},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      remind = #{record.remind,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      game_score = #{record.gameScore,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=INTEGER},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      head_url = #{record.headUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.model.Students">
    update students
    <set>
      <if test="stundentName != null">
        stundent_name = #{stundentName,jdbcType=VARCHAR},
      </if>
      <if test="stundentId != null">
        stundent_id = #{stundentId,jdbcType=BIGINT},
      </if>
      <if test="refereeId != null">
        referee_id = #{refereeId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="parentName != null">
        parent_name = #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null">
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null">
        member_level = #{memberLevel,jdbcType=INTEGER},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="remind != null">
        remind = #{remind,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="gameScore != null">
        game_score = #{gameScore,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="headUrl != null">
        head_url = #{headUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.model.Students">
    update students
    set stundent_name = #{stundentName,jdbcType=VARCHAR},
      stundent_id = #{stundentId,jdbcType=BIGINT},
      referee_id = #{refereeId,jdbcType=INTEGER},
      gender = #{gender,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      parent_name = #{parentName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      teacher_name = #{teacherName,jdbcType=VARCHAR},
      member_level = #{memberLevel,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      remind = #{remind,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      game_score = #{gameScore,jdbcType=INTEGER},
      balance = #{balance,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      head_url = #{headUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from students
    <where>
      <if test="param!=null and param!=''">
        AND id LIKE concat("%",#{param},"%") or stundent_name LIKE concat("%",#{param},"%")
      </if>
      <if test="startTime != null and startTime != ''">
        and register_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and register_time &lt; #{endTime}
      </if>
    </where>
    order by register_time desc
  </select>
  <select id="selectAllByService" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from students
    <where>
      teacher_id in (
      select id from teacher where belongto_piano_shopID in (
      select id from piano_shop where belongto_orginazeID in (
      select id from organization where serviceProvider_id = #{uid,jdbcType=INTEGER})) )
      <if test="param!=null and param!=''">
        AND id LIKE concat("%",#{param},"%") or stundent_name LIKE concat("%",#{param},"%")
      </if>
      <if test="startTime != null and startTime != ''">
        and register_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and register_time &lt; #{endTime}
      </if>
    </where>
    order by register_time desc
  </select>
  <select id="selectAllByOrganization" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from students
    <where>
      teacher_id in (
      select id from teacher where belongto_piano_shopID in (
      select id from piano_shop where belongto_orginazeID = #{uid,jdbcType=INTEGER} ) )
      <if test="param!=null and param!=''">
        AND id LIKE concat("%",#{param},"%") or stundent_name LIKE concat("%",#{param},"%")
      </if>
      <if test="startTime != null and startTime != ''">
        and register_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and register_time &lt; #{endTime}
      </if>
    </where>
    order by register_time desc
  </select>
  <select id="selectAllByPianoShop" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from students
    <where>
      teacher_id in (
      select id from teacher where belongto_piano_shopID = #{uid,jdbcType=INTEGER} )
      <if test="param!=null and param!=''">
        AND id LIKE concat("%",#{param},"%") or stundent_name LIKE concat("%",#{param},"%")
      </if>
      <if test="startTime != null and startTime != ''">
        and register_time &gt; #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        and register_time &lt; #{endTime}
      </if>
    </where>
    order by register_time desc
  </select>
  <!--家长下的孩子-->
  <select id="getStuNameByPid" resultMap="BaseResultMap">
    SELECT
      <include refid="Base_Column_List" />
    FROM students WHERE parent_id=#{pid}
  </select>

  <select id="getStuCountByTid" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM students WHERE teacher_id=#{tid}
  </select>
</mapper>
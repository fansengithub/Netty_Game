<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmall.dao.CommentParentTeacherMapper">
  <resultMap id="BaseResultMap" type="com.mmall.model.CommentParentTeacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="piano_shop" jdbcType="VARCHAR" property="pianoShop" />
    <result column="parents_id" jdbcType="INTEGER" property="parentsId" />
    <result column="parents" jdbcType="VARCHAR" property="parents" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="student" jdbcType="VARCHAR" property="student" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, piano_shop, parents_id, parents, student_id, student, teacher_id, teacher, comment, 
    comment_time
  </sql>
  <select id="selectByExample" parameterType="com.mmall.model.CommentParentTeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment_parent_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmall.model.CommentParentTeacherExample">
    delete from comment_parent_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmall.model.CommentParentTeacher">
    insert into comment_parent_teacher (id, piano_shop, parents_id, 
      parents, student_id, student, 
      teacher_id, teacher, comment, 
      comment_time)
    values (#{id,jdbcType=INTEGER}, #{pianoShop,jdbcType=VARCHAR}, #{parentsId,jdbcType=INTEGER}, 
      #{parents,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, #{student,jdbcType=VARCHAR}, 
      #{teacherId,jdbcType=INTEGER}, #{teacher,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{commentTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mmall.model.CommentParentTeacher">
    insert into comment_parent_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pianoShop != null">
        piano_shop,
      </if>
      <if test="parentsId != null">
        parents_id,
      </if>
      <if test="parents != null">
        parents,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="student != null">
        student,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pianoShop != null">
        #{pianoShop,jdbcType=VARCHAR},
      </if>
      <if test="parentsId != null">
        #{parentsId,jdbcType=INTEGER},
      </if>
      <if test="parents != null">
        #{parents,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="student != null">
        #{student,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmall.model.CommentParentTeacherExample" resultType="java.lang.Long">
    select count(*) from comment_parent_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment_parent_teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pianoShop != null">
        piano_shop = #{record.pianoShop,jdbcType=VARCHAR},
      </if>
      <if test="record.parentsId != null">
        parents_id = #{record.parentsId,jdbcType=INTEGER},
      </if>
      <if test="record.parents != null">
        parents = #{record.parents,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.student != null">
        student = #{record.student,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment_parent_teacher
    set id = #{record.id,jdbcType=INTEGER},
      piano_shop = #{record.pianoShop,jdbcType=VARCHAR},
      parents_id = #{record.parentsId,jdbcType=INTEGER},
      parents = #{record.parents,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      student = #{record.student,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmall.model.CommentParentTeacher">
    update comment_parent_teacher
    <set>
      <if test="pianoShop != null">
        piano_shop = #{pianoShop,jdbcType=VARCHAR},
      </if>
      <if test="parentsId != null">
        parents_id = #{parentsId,jdbcType=INTEGER},
      </if>
      <if test="parents != null">
        parents = #{parents,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="student != null">
        student = #{student,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmall.model.CommentParentTeacher">
    update comment_parent_teacher
    set piano_shop = #{pianoShop,jdbcType=VARCHAR},
      parents_id = #{parentsId,jdbcType=INTEGER},
      parents = #{parents,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      student = #{student,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      teacher = #{teacher,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByParam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from comment_parent_teacher
        <where>
        <if test="param!=null"> and (piano_shop like CONCAT('%',#{param},'%') or teacher like CONCAT('%',#{param},'%') or parents
            like CONCAT('%',#{param},'%'))
        </if>
        </where>
      order by comment_time desc
    </select>
  <select id="selectAllByService"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    <where>
      (teacher_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where belongto_orginazeID in (select id from organization where serviceProvider_id = #{uid,jdbcType=INTEGER}))))
      <if test="param!=null"> and (piano_shop like CONCAT('%',#{param},'%') or teacher like CONCAT('%',#{param},'%') or parents
        like CONCAT('%',#{param},'%'))
      </if>
    </where>
    order by comment_time desc
  </select>
  <select id="selectAllByOrganization"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    <where>
      (teacher_id in (select id from teacher where belongto_piano_shopID in (select id from piano_shop where belongto_orginazeID= #{uid,jdbcType=INTEGER})))
      <if test="param!=null"> and (piano_shop like CONCAT('%',#{param},'%') or teacher like CONCAT('%',#{param},'%') or parents
        like CONCAT('%',#{param},'%'))
      </if>
    </where>
    order by comment_time desc
  </select>
  <select id="selectAllByPianoShop"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    <where>
      (teacher_id in (select id from teacher where belongto_piano_shopID= #{uid,jdbcType=INTEGER}))
      <if test="param!=null"> and (piano_shop like CONCAT('%',#{param},'%') or teacher like CONCAT('%',#{param},'%') or parents
        like CONCAT('%',#{param},'%'))
      </if>
    </where>
    order by comment_time desc
  </select>
    <delete id="deleteByStudentId" parameterType="java.lang.Integer">
    delete from comment_parent_teacher
    where student_id = #{id,jdbcType=INTEGER}
  </delete>

  <select id="selectByTeacherIdAndStudentId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    WHERE  1=1
    <if test="teacherId!=null">
      and  teacher_id = #{teacherId}
    </if>
    <if test="studentId!=null">
      and  student_id = #{studentId}
    </if>
  </select>

  <select id="selectByParentIdAndStudentId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    WHERE  1=1
    <if test="parentId!=null">
      and  parents_id = #{parentId}
    </if>
    <if test="studentId!=null">
      and  student_id = #{studentId}
    </if>
  </select>

  <select id="selectByParentIdAndTeacherId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    WHERE  1=1
    <if test="parentId!=null">
      and  parents_id = #{parentId}
    </if>
    <if test="teacherId!=null">
      and  teacher_id = #{teacherId}
    </if>
  </select>


  <select id="selectByParentId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    WHERE  1=1
    <if test="parentId!=null">
      and  parents_id = #{parentId}
    </if>

  </select>

  <select id="selectByTeacherId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment_parent_teacher
    WHERE  1=1
    <if test="teacherId!=null">
      and  teacher_id = #{teacherId}
    </if>

  </select>
</mapper>